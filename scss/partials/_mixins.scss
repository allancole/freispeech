/**
 * Mixin Essentials 
 * - src: http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
 */


/**
 * antialiasing mode font rendering
 */

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


/* 
 * Links 
 */
@mixin standardlink( $color: $color-2, $hovercolor: $color-3 ) { 
  color: $color; 
	&:link, 
	&:visited { 
  	@include animate-this(.3s,ease-in-out);
  	color: $color; 
  }
	&:hover, 
	&:active, 
	&:focus { 
  	@include animate-this(.3s,ease-in-out);
  	color: $hovercolor; 
  }
}
// @include standardlink($color-2,$color-3);


/**
 * Text Shadow
 */

@mixin single-text-shadow($hoff: false, $voff: false, $blur: false, $spread: false, $color: false) {
  // A lot of people think the color comes first. It doesn't.
  @if type-of($hoff) == color {
    $temp-color: $hoff;
    $hoff: $voff;
    $voff: $blur;
    $blur: $spread;
    $spread: $color;
    $color: $temp-color;
  }
  // Can't rely on default assignment with multiple supported argument orders.
  $hoff: if($hoff, $hoff, $default-text-shadow-h-offset);
  $voff: if($voff, $voff, $default-text-shadow-v-offset);
  $blur: if($blur, $blur, $default-text-shadow-blur);
  $spread: if($spread, $spread, $default-text-shadow-spread);
  $color: if($color, $color, $default-text-shadow-color);
  // We don't need experimental support for this property.
  @if $color == none or $hoff == none {
    @include text-shadow(none);
  }
  @else {
    @include text-shadow(compact($hoff $voff $blur $spread $color));
  }
}
// single-text-shadow($hoff, $voff, $blur, $spread, $color); 


/**
 * SVG background images with PNG and retina fallback
 */

$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}


/**
 * Animations and keyframes
 */

@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

// Animate this 
@mixin animate-this( $speed, $ease ) { 
	-webkit-transform: translate3d(0, 0, 0);  
	-webkit-transition: all $speed $ease;
	-moz-transition: all $speed $ease;
	-o-transition: all $speed $ease;
	-ms-transition: all $speed $ease;
	transition: all $speed $ease;
}
// @include animate-this(.3s,ease-in-out);

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
// @include transition(color .3s ease-in-out);


/**
 * Cross Browser Opacity 
 */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
// .faded-text { @include opacity(0.8); }


/**
 * Clear Fix 
 */
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
// .container-with-floated-children { @extend %clearfix; }


/**
 * Visually hide an element
 */
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}
/*
 * HTML 
<button class="mobile-navigation-trigger">
  <b class="visually-hidden">Open the navigation</b>
  <img src="img/mobile-navigation-icon.svg">
</button>

 * CSS
.visually-hidden {
  @extend %visuallyhidden;
}
*/